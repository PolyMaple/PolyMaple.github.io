var mapleTokenInfo=null;const BLOCKS_PER_DAY=41143,MAPLE_CHEF_ADDR="0xa1a691f0616F7eb84671Ff67A48cF1eB5E74fa41",MAPLE_TOKEN_ADDR="0x67F0e196fF54A624E4063fa3619D483Be336d5DB",MAPLE_PRICE_LP="0x7066141479Ec93aE77508D03C3493079aCe8eCBA",MAPLE_TOKEN_ABI=MAPLE_TOKEN_ABI_v1,MAPLE_TICKER="MAPLE",MAPLESYRUP_TOKEN_ADDR="0x59F2f1fCfE2474fD5F0b9BA1E73ca90b143Eb8d0",MAPLESYRUP_CHEF_ADDR="0xC6bA8C3233eCF65B761049ef63466945c362EdD2",MAPLESYRUP_PRICE_LP="0x7879a8493bEa46e2EBA3EF2ba9b885e548b9820A",MULTIPLIER_DIVISOR=1e3,MAPLESYRUP_TICKER="SYRUP",MASTER_CHEF_ADDR=MAPLESYRUP_CHEF_ADDR,MASTER_CHEF_ABI=MAPLESYRUP_CHEF_ABI,POOL_TOKEN_ADDR=MAPLESYRUP_TOKEN_ADDR,POOL_TOKEN_TICKER=MAPLESYRUP_TICKER,POOL_TOKEN_DECIMALS=18,POOL_TOKEN_ABI=MAPLESYRUP_TOKEN_ABI,TESTMODE=!0,burnWallet="0x000000000000000000000000000000000000dead",MC_SUPPORTS_BOOST=!0,POOL_CLASS="syrup",RPC_API_URL="https://polygon-mainnet.infura.io/v3/fa72a89dee9f4f9eaa48d34bbd103e5d",RPC_API_URL2="https://polygon-mainnet.infura.io/v3/cdc854e96bdf4d8fbe2f87ca6e02e1ec",RPC_API_URL4="https://rpc-mainnet.maticvigil.com/v1/64d43f17e4a8bc3daec1e2b0e51564fcee871440",RPC_API_URL4_WS="wss://rpc-mainnet.maticvigil.com/ws/v1/64d43f17e4a8bc3daec1e2b0e51564fcee871440",RPC_API_LIST=[RPC_API_URL,RPC_API_URL2],maticTokens=[{id:"wmatic",symbol:"WMATIC",contract:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",decimals:18},{id:"matic",symbol:"MATIC",contract:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",decimals:18},{id:"tether",symbol:"USDT",contract:"0xc2132D05D31c914a87C6611C10748AEb04B58e8F",decimals:18},{id:"bitcoin",symbol:"WBTC",contract:"0x1BFD67037B42Cf73acF2047067bd4F2C47D9BfD6",decimals:8},{id:"ethereum",symbol:"WETH",contract:"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619",decimals:18},{id:"usd-coin",symbol:"USDC",contract:"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174",decimals:6},{id:"dai",symbol:"DAI",contract:"0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063",decimals:18},{id:"quick",symbol:"QUICK",contract:"0x831753DD7087CaC61aB5644b308642cc1c33Dc13",decimals:18},{id:"stake-dao",symbol:"SDT",contract:"0x361A5a4993493cE00f61C32d4EcCA5512b82CE90",decimals:18},{id:"yield-app",symbol:"YLD",contract:"0x4CEBdBCB286101A17D3eA1f7fe7bbDeD2B2053dd",decimals:18},{id:"aave",symbol:"AAVE",contract:"0xD6DF932A45C0f255f85145f286eA0b292B21C90B",decimals:18},{id:"polywhale",symbol:"KRILL",contract:"0x05089C9EBFFa4F0AcA269e32056b1b36B37ED71b",decimals:18},{id:"chainlink",symbol:"LINK",contract:"0x53E0bca35eC356BD5ddDFebbD1Fc0fD03FaBad39",decimals:18},{id:"sushi",symbol:"SUSHI",contract:"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a",decimals:18},{id:"dfyn-network",symbol:"DFYN",contract:"0xC168E40227E4ebD8C1caE80F7a55a4F0e6D66C97",decimals:18},{id:"polydoge",symbol:"POLYDOGE",contract:"0x8a953cfe442c5e8855cc6c61b1293fa648bae472",decimals:18},{id:"wmatic-maple",symbol:"WMATIC-MAPLE",contract:"0x7066141479Ec93aE77508D03C3493079aCe8eCBA",decimals:18},{id:"usdc-weth",symbol:"USDC-WETH",contract:"0x853Ee4b2A13f8a742d64C8F088bE7bA2131f670d",decimals:18},{id:"wmatic-usdc",symbol:"USDC-WMATIC",contract:"0x6e7a5FAFcec6BB1e78bAE2A1F0B612012BF14827",decimals:18},{id:"syrup-usdc",symbol:"USDC-SYRUP",contract:"0x6f17179AaDb58051ab3525C2F8e81f992Afdc3AD",decimals:18},{id:"syrup-wmatic",symbol:"SYRUP-WMATIC",contract:"0x7879a8493bEa46e2EBA3EF2ba9b885e548b9820A",decimals:18}],tokens=[{id:"maple",symbol:MAPLE_TICKER,contract:MAPLE_TOKEN_ADDR},{id:"maplesyrup",symbol:MAPLESYRUP_TICKER,contract:MAPLESYRUP_TOKEN_ADDR}];var poolContracts=[],poolDecimals=[];poolDecimals["0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"]=18,poolDecimals["0x67F0e196fF54A624E4063fa3619D483Be336d5DB"]=18;var tokenPoolPrices=[],baseRewardPct=1;const lookUpPrices=async function(e){e=e.join("%2C");const t=await fetch("https://api.coingecko.com/api/v3/simple/price?ids="+e+"&vs_currencies=usd");e=await t.text();return JSON.parse(e)};async function getMaticPrices(){var e=await lookUpPrices(maticTokens.map(e=>e.id));const t={};for(const a of maticTokens)e[a.id]&&(t[a.contract]=e[a.id]);return t}const ethereumButton=document.getElementById("enableEthereumButton"),addTokenButton=document.getElementById("addTokenButton"),addSyrupTokenButton=document.getElementById("addSyrupTokenButton"),buyArea=document.getElementById("buyArea"),resultArea=document.getElementById("resultArea");var masterChefContract,tokenContract,maplePrice,tokenPrices,masterChefContractMM,tokenContractMM,rewardsFromBoostArea,USDstakedInput,usdLPTokenStakedInput,lpTokensStakedInput,connectedToMM=!1,toasty=null,masterChefProp={emissionsPerBlock:0,totalAllocPoints:0};async function addCustomToken(e,t,a,n){try{await ethereum.request({method:"wallet_watchAsset",params:{type:"ERC20",options:{address:e,symbol:t,decimals:a,image:n}}})}catch(e){console.log(e)}}async function getAccount(){setupAccount((await ethereum.request({method:"eth_requestAccounts"}))[0])}function setupAccount(e){ethereumButton.classList.add("btn-outline-primary"),ethereumButton.classList.remove("btn-primary"),ethereumButton.innerText=e.substring(0,4).concat("...").concat(e.substring(e.length-4)),connectedToMM=!0,connected(e)}function getToFixed(e,t){return(Math.round(100*e)/100).toFixed(2)}async function getTokenPrice(e,t,a,n){const o=new web3api.eth.Contract(a,n);token0=await o.methods.token0().call(),token1=await o.methods.token1().call();var s=0,c=0;t[token0]&&(s=t[token0].usd),t[token1]&&(c=t[token1].usd);a=0;return 0==s&&0<c?console.log("need token0 price.."):0<s&&0==c&&(c=(n=await o.methods.getReserves().call())[0],n=n[1],t[e]={usd:a=c/n*s}),a}function setupBoostCalculator(){(USDstakedInput=document.getElementById("usdValueStaked")).addEventListener("change",calcInputChanged),(usdLPTokenStakedInput=document.getElementById("usdLPTokenStaked")).addEventListener("change",calcInputChanged),lpTokensStakedInput=document.getElementById("lpTokensStaked"),lpTokensStaked.addEventListener("change",calcInputChanged),rewardsFromBoostArea=document.getElementById("rewardsFromBoost")}function calcInputChanged(e){var t=e.target.id;console.log("Calc input changed: "+t),console.log("tokenPrices is:",tokenPrices);e=tokenPrices[MAPLE_PRICE_LP].usd;console.log("Maple LP price: "+e),console.log("Setting usdLPTokenStakedInput to : "+lpTokensStakedInput.value+" * "+e),"lpTokensStaked"==t?0<lpTokensStakedInput.value&&(usdLPTokenStakedInput.value=lpTokensStakedInput.value*e+""):"usdLPTokenStaked"==t&&(console.log("usdLPTokenStakedInput is : "+usdLPTokenStakedInput.value+" maplePrice: "+e),0<usdLPTokenStakedInput.value&&(lpTokensStakedInput.value=usdLPTokenStakedInput.value/e+"")),0<USDstakedInput.value&&0<usdLPTokenStakedInput.value&&0<lpTokensStakedInput.value&&(e=Math.min(usdLPTokenStakedInput.value/USDstakedInput.value/.8,1)+1,console.log("boostLevel: "+e),rewardsFromBoostArea.value=displayPrice(e)+"x")}async function startApp(e){console.log("startApp!");const t=document.getElementById("networkMessage");if("undefined"!=typeof ethereum)if(null!=ethereum.networkVersion&&137!=ethereum.networkVersion){if(t&&t.classList.remove("d-none"),31337!=ethereum.networkVersion)return}else t&&t.classList.add("d-none");else console.log("Need to install a web3 wallet.");if("syrup"==POOL_CLASS){const C=document.getElementById("poolsTitle");C.classList.add("d-none");const E=document.getElementById("poolsTitleImage");E.classList.remove("d-none"),MC_SUPPORTS_BOOST&&setupBoostCalculator()}const a=new web3api.eth.Contract(MAPLE_TOKEN_ABI,MAPLE_TOKEN_ADDR);"undefined"!=typeof ethereum&&(tokenContractMM=new web3.eth.Contract(MAPLE_TOKEN_ABI,MAPLE_TOKEN_ADDR));let n=null;void 0!==POOL_TOKEN_ADDR&&(n=new web3api.eth.Contract(POOL_TOKEN_ABI,POOL_TOKEN_ADDR),"undefined"!=typeof ethereum&&new web3.eth.Contract(POOL_TOKEN_ABI,POOL_TOKEN_ADDR));var o=await getMaticPrices();if("syrup"==POOL_CLASS&&null!=n){const g=document.getElementById("syruptokensupply");var s=await n.methods.totalSupply().call(),c=web3api.utils.fromWei(s);g.innerHTML=displayPrice(c,2);const P=document.getElementById("syrupburnedtokens");var l=await n.methods.balanceOf(burnWallet).call();let e=new BigNumber(l);var r=e.shiftedBy(parseInt(-POOL_TOKEN_DECIMALS)).toFixed();P.innerHTML=displayPrice(r,2);let t=0;null!=MAPLESYRUP_PRICE_LP&&(t=await getTokenPrice(POOL_TOKEN_ADDR,o,poolABI,MAPLESYRUP_PRICE_LP)),syrupTokenPriceArea=document.getElementById("syrupTokenPrice"),syrupTokenPriceArea.innerHTML="$"+t,console.log("Syrup Price: "+t);s=t*c;const h=document.getElementById("syrupmarketCap");h.innerHTML="$"+displayPrice(s,2);l=await n.methods.maxTransferAmount().call(),r=web3api.utils.fromWei(l);syrupmaxTransferAmountArea=document.getElementById("syrupmaxTransferAmount"),syrupmaxTransferAmountArea.innerHTML=displayPrice(r)+"",poolTokenPrice=t}c=await a.methods.totalSupply().call(),s=web3api.utils.fromWei(c);const i=document.getElementById("tokensupply");i.innerHTML=displayPrice(s,2);l=await a.methods.balanceOf(burnWallet).call(),r=await a.methods.decimals().call();let d=new BigNumber(l);d=d.shiftedBy(parseInt(-r)).toFixed();const m=document.getElementById("burnedtokens");m.innerHTML=displayPrice(d,2)+"",circulatingSupply=s-d;const u=document.getElementById("circulatingsupply");u.innerHTML=displayPrice(circulatingSupply,2)+"",masterChefContract=new web3api.eth.Contract(MASTER_CHEF_ABI,MASTER_CHEF_ADDR),"undefined"!=typeof ethereum&&(masterChefContractMM=new web3.eth.Contract(MASTER_CHEF_ABI,MASTER_CHEF_ADDR));c=await masterChefContract.methods.tokenPerBlock().call(),l=web3api.utils.fromWei(c),r=await masterChefContract.methods.totalAllocPoint().call(),c=await getTokenPrice(MAPLE_TOKEN_ADDR,o,poolABI,MAPLE_PRICE_LP);"maple"==POOL_CLASS&&(poolTokenPrice=c);const p=document.getElementById("nativeTokenPrice");p.innerHTML="$"+c;const f=document.getElementById("footer_price");f&&(f.innerHTML="Maple Price: $"+displayPrice(c,2));const k=document.getElementById("marketCap"),A=document.getElementById("footer_marketcap");s*=c;k.innerHTML="$"+displayPrice(s,2),A.innerHTML="MCap: $"+displayPrice(s,2);s=await a.methods.maxTransferAmount().call(),s=web3api.utils.fromWei(s);maxTransferAmountArea=document.getElementById("maxTransferAmount"),maxTransferAmountArea.innerHTML=displayPrice(s)+"",tokenPrices=o,masterChefProp={emissionsPerBlock:l,totalAllocPoints:r},maplePrice=c,MC_SUPPORTS_BOOST&&(baseRewardPct=await masterChefContract.methods.baseRewardPct().call()),await setupPools(o,l,r,poolTokenPrice,baseRewardPct),null!=e&&setupAccount(e)}ethereumButton.addEventListener("click",()=>{getAccount()}),addTokenButton.addEventListener("click",()=>{addCustomToken(MAPLE_TOKEN_ADDR,"MAPLE",18,"https://www.polymaple.com/assets/maple.png")}),addSyrupTokenButton.addEventListener("click",()=>{addCustomToken(MAPLESYRUP_TOKEN_ADDR,"SYRUP",18,"https://www.polymaple.com/assets/syrup/SyrupTokenIcon.png")});let innerReturnFunction=({res:e,poolId:t})=>({res:e,poolId:t});function toFixed(e){var t;return Math.abs(e)<1?(t=parseInt(e.toString().split("e-")[1]))&&(e*=Math.pow(10,t-1),e="0."+new Array(t).join("0")+e.toString().substring(2)):20<(t=parseInt(e.toString().split("+")[1]))&&(t-=20,e/=Math.pow(10,t),e+=new Array(t+1).join("0")),e}async function connected(a){for(rewardToken=POOL_TOKEN_TICKER,id=0;id<poolCount;id++){const l=document.getElementsByClassName("pool-"+id)[0];var n=await masterChefContract.methods.pendingToken(id,a).call();pendingTokens=web3api.utils.fromWei(n),pendingTokens=displayPrice(pendingTokens,2);var o=await masterChefContract.methods.userInfo(id,a).call(),s=poolContracts[id];new web3api.eth.Contract(tokenABI,s);poolTokenDecimals=poolDecimals[s];s=o.amount;let e=new BigNumber(s);o=e.shiftedBy(parseInt(-poolTokenDecimals)).toFixed();if(l){const r=l.getElementsByClassName("approve")[0];r.disabled=!1;const i=l.getElementsByClassName("connectwallet")[0];i.classList.add("d-none");s=pendingTokens;0<pendingTokens&&(s=s+" ($"+getToFixed(pendingTokens*maplePrice)+")");const d=l.getElementsByClassName("tokensearned")[0];0<n&&(s=s+' <a data-pid="'+id+'"href="#" id="harvest-'+id+'">Harvest</a>');const m=l.getElementsByClassName("earnToken")[0];if(m.innerHTML=rewardToken,d.innerHTML=s,0<n){const P=document.getElementById("harvest-"+id);P.addEventListener("click",harvestClicked)}const u=l.getElementsByClassName("tokensstaked")[0];u.setAttribute("data-tokensstaked",o),0<o&&((c=l.getAttribute("token-price"))&&0),u.innerHTML=o+"";const p=l.getElementsByClassName("tokenstats")[0];p.classList.remove("d-none");const f=l.getElementsByClassName("approve")[0],k=f.getAttribute("data-contract"),A=l.getElementsByClassName("stakingform")[0],C=l.getElementsByClassName("unstakingform")[0];n=ethereum.selectedAddress;const E=new web3api.eth.Contract(tokenABI,k);var c=await E.methods.balanceOf(n).call(),n=await E.methods.decimals().call();let e=new BigNumber(c),t=e.shiftedBy(parseInt(-n));const g=l.getElementsByClassName("tokenbalance")[0];g.setAttribute("data-yourtokens",t.toFixed()),g.innerHTML=t.toFixed();n=id;checkAllowance(k,a,MASTER_CHEF_ADDR,n).then(function({res:e,poolId:t}){0<e&&allowPool(f,A,C,t,poolTokenDecimals,e,k)}),0<o&&C.classList.remove("d-none")}}}function addDecimalPlace(e,t){if(0==e)return 0;var a=e.length;return e.substr(0,a-t)+"."+e.substring(a-t)}function allowPool(e,t,a,n,o,s,c){e.classList.add("d-none"),t.classList.remove("d-none");const l=t.querySelector("[data-action='stake']");l.setAttribute("data-pid",n),l.setAttribute("data-decimals",o),l.setAttribute("data-allowance",s),null!=c&&l.setAttribute("data-contract",c),l.setAttribute("data-bs-content","Allowance: "+s/10**o),l.addEventListener("click",stakeClicked);const r=a.querySelector("[data-action='unstake']");r.setAttribute("data-pid",n),r.setAttribute("data-decimals",o),r.addEventListener("click",unstakeClicked);const i=t.querySelector("[data-action='maxstake']");i.setAttribute("data-pid",n),i.addEventListener("click",maxStakeClicked);const d=a.querySelector("[data-action='maxunstake']");d.setAttribute("data-pid",n),d.addEventListener("click",maxUnstakeClicked)}async function stakeClicked(e){const t=e.target;setButtonLoading(t,"Staking...");var a=t.getAttribute("data-pid"),n=t.getAttribute("data-allowance");const o=document.getElementsByClassName("pool-"+a)[0];var s=o.querySelector("[data-action='stakeamount']").value,e=t.getAttribute("data-decimals");let c=new BigNumber(s);s*=10**e,c=c.shiftedBy(parseInt(e)),n<s&&(console.log("WARNING NOT ENOUGH ALLOWANCE!"),s=t.getAttribute("data-contract"),await doApprove(new web3api.eth.Contract(tokenABI,s),MASTER_CHEF_ADDR,"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")),doDeposit(a,c).then(function(e){console.log("depositRes",e),unsetButtonLoading(t,"Stake")})}function setButtonLoading(e,t){e.disabled=!0,e.innerHTML="<span class='spinner-border spinner-border-sm' role='status' aria-hidden='true'></span><span>"+t+"</span>"}function unsetButtonLoading(e,t){e.disabled=!1,e.innerHTML=t}function maxUnstakeClicked(e){const t=e.target;e=t.getAttribute("data-pid");const a=document.getElementsByClassName("pool-"+e)[0],n=a.querySelector("[data-tokensstaked]");e=n.getAttribute("data-tokensstaked");const o=a.querySelector("[data-action='unstakeamount']");o.value=e}function maxStakeClicked(e){const t=e.target;e=t.getAttribute("data-pid");const a=document.getElementsByClassName("pool-"+e)[0],n=a.querySelector("[data-yourtokens]");e=n.getAttribute("data-yourtokens");const o=a.querySelector("[data-action='stakeamount']");o.value=e}async function harvestClicked(e){const t=e.target;ethereum.selectedAddress;e=t.getAttribute("data-pid");canHarvest=await masterChefContract.methods.canHarvest(e,ethereum.selectedAddress).call(),canHarvest?doHarvest(e).then(function(e){console.log("harvestRes",e)}):showModal("Cannot harvest yet","Please wait a bit longer before you can harvest rewards.")}function showModal(e,t){var a=document.getElementById("myModal"),n=document.getElementById("myModalTitleLabel"),o=document.getElementById("myModalBody");n.innerHTML=e,o.innerHTML=t,new bootstrap.Modal(a).show()}function unstakeClicked(e){const t=e.target;setButtonLoading(t,"Unstake...");var a=t.getAttribute("data-pid");const n=document.getElementsByClassName("pool-"+a)[0];var o=n.querySelector("[data-action='unstakeamount']"),e=t.getAttribute("data-decimals"),o=o.value;doWithdraw(a,o*=10**e).then(function(e){console.log("withdrawRes",e),unsetButtonLoading(t,"Unstake")})}async function doCheckHarvest(e,t){return res=await masterChefContractMM.methods.canHarvest(e,ethereum.selectedAddress).send({from:ethereum.selectedAddress}),res}async function doHarvest(t){var e;try{e=await masterChefContractMM.methods.deposit(t,0).send({from:ethereum.selectedAddress}).once("receipt",function(e){updatePoolInfo(t,tokenPrices,masterChefProp.emissionsPerBlock,masterChefProp.totalAllocPoints,maplePrice,baseRewardPct),connected(ethereum.selectedAddress),console.log("harvestRes",e);e=e.transactionHash;createToast("Harvest Transaction","5 seconds ago","Your harvest transaction has been completed.  <a href='"+getScannerLinkForTransaction(e)+"' target='_blank' />View "+e+"</a>")})}catch(e){console.log("Exception in harvest call")}return e}function numberToString(e){let t=String(e);var a,n;return Math.abs(e)<1?(a=parseInt(e.toString().split("e-")[1]))&&((n=e<0)&&(e*=-1),e*=Math.pow(10,a-1),t="0."+new Array(a).join("0")+e.toString().substring(2),n&&(t="-"+t)):20<(n=parseInt(e.toString().split("+")[1]))&&(n-=20,e/=Math.pow(10,n),t=e.toString()+new Array(1+n).join("0")),t}async function doDeposit(t,e){var a,e=numberToString(e);try{a=await masterChefContractMM.methods.deposit(t,e).send({from:ethereum.selectedAddress}).once("receipt",function(e){updatePoolInfo(t,tokenPrices,masterChefProp.emissionsPerBlock,masterChefProp.totalAllocPoints,maplePrice,baseRewardPct),connected(ethereum.selectedAddress),console.log("stakeres",e);e=e.transactionHash;createToast("Stake Transaction","5 seconds ago","Your stake transaction has been completed.  <a href='"+getScannerLinkForTransaction(e)+"' target='_blank' />View "+e+"</a>"),clearStakeBox(t)})}catch(e){console.log("Exception in deposit call: "+e)}return a}function clearStakeBox(e){const t=document.getElementsByClassName("pool-"+e)[0],a=t.querySelector("[data-action='stakeamount']");a&&(a.value="")}function clearUnStakeBox(e){const t=document.getElementsByClassName("pool-"+e)[0],a=t.querySelector("[data-action='unstakeamount']");a&&(a.value="")}async function doWithdraw(t,e){var a,e=numberToString(e);try{a=await masterChefContractMM.methods.withdraw(t,e).send({from:ethereum.selectedAddress}).once("receipt",function(e){updatePoolInfo(t,tokenPrices,masterChefProp.emissionsPerBlock,masterChefProp.totalAllocPoints,maplePrice,baseRewardPct),connected(ethereum.selectedAddress),console.log("unstakeres",e);e=e.transactionHash;createToast("Unstake Transaction","5 seconds ago","Your un-stake transaction has been completed.  <a href='"+getScannerLinkForTransaction(e)+"' target='_blank' />View "+e+"</a>"),clearUnStakeBox(t)})}catch(e){console.log("Exception in withdraw call")}return a}async function setupPools(e,t,a,n,o){poolCount=parseInt(await masterChefContract.methods.poolLength().call(),10);const s=document.getElementById("poolcontainer"),c=s.getElementsByClassName("pool")[0];null!=POOL_CLASS&&""!=POOL_CLASS&&c.classList.add(POOL_CLASS);var l=0;for(i=0;i<poolCount;i++)0<i&&injectNewPool(i,s,c),val=await updatePoolInfo(i,e,t,a,n,o),l+=val;const r=document.getElementById("totalValueLocked");r.innerHTML="$"+displayPrice(l,2);const d=document.getElementById("footer_tvl");d&&(d.innerHTML="TVL: $"+displayPrice(l,2));const m=document.getElementById("loading_pools");m.classList.add("d-none"),s.classList.remove("d-none")}function formatMoney(t,a=2,n=".",o=","){try{a=Math.abs(a),a=isNaN(a)?2:a;var s=t<0?"-":"";let e=parseInt(t=Math.abs(Number(t)||0).toFixed(a)).toString();var c=3<e.length?e.length%3:0;return s+(c?e.substr(0,c)+o:"")+e.substr(c).replace(/(\d{3})(?=\d)/g,"$1"+o)+(a?n+Math.abs(t-e).toFixed(a).slice(2):"")}catch(e){console.log(e)}}function getParameterCaseInsensitive(e,t){return e[Object.keys(e).find(e=>e.toLowerCase()===t.toLowerCase())]}function displayPrice(e,t){return formatMoney(e)}function injectNewPool(e,t,a){a=a.cloneNode(!0);a.classList.remove("pool-0"),a.classList.add("pool-"+e),t.appendChild(a)}async function updatePoolInfo(e,t,a,n,o,s){const c=await masterChefContract.methods.poolInfo(e).call();poolContracts[e]=c.lpToken;let l=null;"undefined"!=typeof ethereum&&(l=ethereum.selectedAddress);var r=null;null!=l&&(r=(await masterChefContract.methods.userInfo(e,l).call()).nextHarvestUntil-Math.floor(Date.now()/1e3));const i=document.getElementsByClassName("pool-"+e)[0];if(i){const b=i.getElementsByClassName("locked")[0];if(0<r){new Date(r);b.classList.remove("d-none");const B=b.getElementsByClassName("timeleft")[0];var d=r/60;d<60?B.innerHTML=Math.round(d)+" m":(C=d/60,E=Math.floor(C),g=Math.round(60*(C-E)),B.innerHTML=Math.floor(E)+"h "+g+"m")}else b.classList.add("d-none");i.getElementsByClassName("multiplier")[0].innerHTML=c.allocPoint/MULTIPLIER_DIVISOR+"x",i.getElementsByClassName("depositFee")[0].innerHTML=c.depositFeeBP/100+"%";var m=i.getElementsByClassName("poolTitle")[0],u=c.lpToken,p=c.lpToken;token=maticTokens.find(e=>e.contract===c.lpToken),token2=tokens.find(e=>e.contract===c.lpToken),token?p=token.symbol:c.lpToken==POOL_TOKEN_ADDR?p=POOL_TOKEN_TICKER:token2&&(p=token2.symbol);const T=new web3api.eth.Contract(poolABI,c.lpToken);var f=await T.methods.decimals().call();poolDecimals[c.lpToken]=f;var k,A,C,E,g,P,h=50,r="fs-3";p.includes("-")&&(A=k=null,k=await T.methods.token0().call(),A=await T.methods.token1().call(),P=addDecimalPlace(P=await T.methods.totalSupply().call(),18),C=d=0,t[k]&&(d=t[k].usd),t[A]&&(C=t[A].usd),E=await getReserves(T),maticTokens.find(e=>e.contract===k),maticTokens.find(e=>e.contract===A),g=poolDecimals[k],f=poolDecimals[A],P=(d*(g=E[0]/Math.pow(10,g))+C*(f=E[1]/Math.pow(10,f)))/P,i.setAttribute("token-price",P),h=100,r="fs-6",tokenPrices[c.lpToken]={usd:P}),m.innerHTML='<img src="/assets/tokens/'+c.lpToken+".png\" height='50' width='"+h+"'/><span class='"+r+"'>"+p+"</span>";h=0,r=poolDecimals[c.lpToken],p=await getBalance(new web3api.eth.Contract(tokenABI,c.lpToken),MASTER_CHEF_ADDR);p/=Math.pow(10,r);t[u]&&t[u].usd&&(P=t[u].usd);i.getElementsByClassName("tokenPriceContainer")[0];0<(tokenPoolPrices[u]=P)&&0;u=p*P;console.log("apr poolTotalValueLocks: "+u+" poolTokenInContract: "+p+" tokenPrice: "+P);const L=i.getElementsByClassName("liquidityContainer")[0];p=i.getElementsByClassName("liquidity")[0];0<u?(y="",k&&A&&(y="<a href='"+("https://quickswap.exchange/#/add/"+k+"/"+A)+"' target='_blank'/>Create LP</a>"),p.innerHTML="$"+displayPrice(u,2)+" "+y,L.classList.remove("d-none")):L.classList.add("d-none");var p=c.allocPoint,y=a*BLOCKS_PER_DAY*(p/n),a=1,p=0,n=c.isBoosted;if(n&&(console.log("baseRewardPct is : ",s),a=s,p=await masterChefContract.methods.getTotalRewardPct(e,l).call(),console.log("boostReward : "+p+" for pool: "+e)),0<P&&(console.log("Apr is made up of : "+o+" dailyPoolEmissions: "+y+" poolTotalValueLocks: "+u+" baseReward: "+a),h=o*y*365/u*a),n){boostApr=o*y*365/u*p,console.log("apr is : "+h+" max boost amt: "+(h*(1/(s/1e4))-h)),i.classList.add("boosted");const _=i.getElementsByClassName("boost")[0];_.classList.remove("d-none");const I=_.getElementsByClassName("boostapr")[0];I.innerHTML="+"+Math.round(h*((p-s)/1e4))+"%",console.log("boostedApr is : "+Math.round(h*((p-s)/1e4))+" made up of: apr: "+h+" boostReward: "+p+" baseRewardPct: "+s)}else if(MC_SUPPORTS_BOOST){i.classList.add("boosted"),boostApr=h;const S=i.getElementsByClassName("boost")[0];S.classList.remove("d-none");const v=S.getElementsByClassName("boostapr")[0];v.innerHTML="+"+Math.round(h)+"%"}aprArea=i.getElementsByClassName("apr")[0],aprArea.innerHTML=Math.round(h)+"%",i.getElementsByClassName("loader")[0].classList.add("d-none"),i.getElementsByClassName("poolinfo")[0].classList.remove("d-none");const w=i.getElementsByClassName("approve")[0];if(w.setAttribute("data-contract",c.lpToken),w.setAttribute("data-poolid",e),w.addEventListener("click",approveContract),MC_SUPPORTS_BOOST){const M=i.getElementsByClassName("boosterpool")[0],D=i.getElementsByClassName("boost-header")[0];c.lpToken==MAPLE_PRICE_LP?(console.log("Removing boosterPoolHidden from : "+c.lpToken),M.classList.remove("d-none"),D.classList.remove("d-none")):(console.log("Adding boosterPoolHidden from : "+c.lpToken),M.classList.add("d-none"),D.classList.add("d-none"))}}return u}async function approveContract(e){const a=e.target,n=a.getAttribute("data-contract");a.disabled=!0;const t=new web3.eth.Contract(tokenABI,n),o="0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",s=await t.methods.decimals().call();doApprove(t,MASTER_CHEF_ADDR,o).then(function(e){if(1==e.status){e=a.getAttribute("data-poolid");const t=document.getElementsByClassName("pool-"+e)[0];allowPool(t.getElementsByClassName("approve")[0],t.getElementsByClassName("stakingform")[0],t.getElementsByClassName("unstakingform")[0],e,s,o,n)}})}async function getLPTokens(e){return{token0:await e.methods.token0().call(),token1:await e.methods.token1().call()}}async function getReserves(e){return await e.methods.getReserves().call()}async function checkAllowance(e,t,a,n){const o=new web3api.eth.Contract(tokenABI,e);a=await o.methods.allowance(t,a).call();return innerReturnFunction({res:a,poolId:n})}async function doApprove(e,t,a){return res=await e.methods.approve(t,a).send({from:ethereum.selectedAddress}),res}async function getBalance(e,t){return balance=await e.methods.balanceOf(t).call(),balance}async function getTokenInfo(e){e=await e.methods.totalSupply().call();return{totalSupply:web3api.utils.fromWei(e)}}function getRandomRPC(){var e=RPC_API_LIST.length,e=Math.floor(Math.random()*e);return RPC_API_LIST[e]}function createToast(e,t,a,n){const o=document.getElementById("toastArea");null!=o&&(a=createElementFromHTML("<div id='liveToast' class='toast hide' role='alert' aria-live='assertive' aria-atomic='true' data-bs-delay='15000'><div class='toast-header'><strong class='me-auto'>"+e+"</strong><small>"+t+"</small><button type='button' class='btn-close' data-bs-dismiss='toast' aria-label='Close'></button></div><div class='toast-body' id='toastBody'>"+a+"</div></div>"),o.appendChild(a),(toasty=new bootstrap.Toast(a,{animation:!0})).show())}function getScannerLinkForTransaction(e){return"https://www.polygonscan.com/tx/"+e}function createElementFromHTML(e){var t=document.createElement("div");return t.innerHTML=e.trim(),t.firstChild}window.addEventListener("load",function(){let e=getRandomRPC();TESTMODE&&(e="http://localhost:8545"),console.log("Selected RPC url: "+e),web3api=new Web3(new Web3.providers.HttpProvider(e)),console.log("setup web3api",web3api),"undefined"!=typeof web3?(console.log("Given provider: ",Web3.givenProvider),web3=new Web3(Web3.givenProvider||"ws://localhost:8545"),console.log("Web3 configured"),console.log("ethereum.networkVersion:"+ethereum.networkVersion),console.log("ethereum.selectedAddress:"+ethereum.selectedAddress),ethereum.selectedAddress?startApp(ethereum.selectedAddress):startApp(null)):(console.log("No web3."),startApp(null)),window.ethereum&&(window.ethereum.on("accountsChanged",function(e){console.log("accountsChanges",e),location.reload()}),window.ethereum.on("chainChanged",function(e){console.log("chainChanged",e),location.reload()}))});